#include <iostream>
#include <clocale>

using namespace std;

/*
 * @brief Л/р 5 Одномерные массивы
 * Пислегин Евгений Константинович ИВТ - 32
 * Дан массив A размера N. Вывести вначале его элементы с четными номерами
 * (в порядке возрастания номеров), а затем —
 * элементы с нечетными номерами (также в порядке возрастания номеров):
 * A2,A4,A6,. . ., A1,A3,A5, . . . . 
 * (Условный оператор не использовать!)
 * @return 0 - всё ок, 1 - ошибка ввода
*/

//Код со статическим выделением памяти

int main() {
	setlocale(LC_ALL, "ru");
	//Ввод константы (максимального размера массива)
	const size_t ms = 100;
	//Создание массива
	int a[ms];
	size_t N;
	//Ввод кол-ва переменных
	cout << "Укажите количество переменных(число в диапазоне [1; 100]): ";
	cin >> N;

	//Проверка условия ввода
	if (N == 0 || N > ms) {
		cout << "Ошибка: количество должно находиться в диапазоне [1; "
			<< ms << "] " << endl;
		return 1;
	}

	//Заполнение массива
	cout << "Введите N переменных:\n";
	for (size_t i = 0; i < N; i++) {
		cin >> a[i];
	}
	//Вывод элементов с чётными номерами в порядке возрастания номеров
	for (int i = 1; i < N; i += 2) {
		cout << a[i] << " ";
	}
	//Вывод элементов с нечётными номерами в порядке возрастания номеров
	for (int i = 0; i < N; i += 2) {
		cout << a[i] << " ";
	}
}

/*
//Код со динамическим выделением памяти

int main() {
	setlocale(LC_ALL, "ru");

	size_t N;
	cout << "Укажите количество переменных: ";
	cin >> N;
	if (N == 0) {
		cerr << "Ошибка: количество должно быть больше нуля." << endl;
		return 1;
	}

	/// Указатель на динамический массив
	int* a;
	// динамическое выделение памяти динамического массива
	a = new int[N];

	cout << "Введите N переменных:\n";
	for (size_t i = 0; i < N; i++) {
		cin >> a[i];
	}

	//Вывод элементов с чётными номерами в порядке возрастания номеров
	for (int i = 1; i < N; i += 2) {
		cout << a[i] << " ";
	}

	//Вывод элементов с нечётными номерами в порядке возрастания номеров
	for (int i = 0; i < N; i += 2) {
		cout << a[i] << " ";
	}
	// освобождение памяти динамического массива
	delete[] a;
	return 0;
}

*/